{
  "comments": [
    {
      "key": {
        "uuid": "ced58901_a08eda23",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T11:45:56Z",
      "side": 1,
      "message": "It would also make sense to mention that this change only adds support for embedded mode. There are two other deployment options for Apache Derby [1] :\n\n* Derby Network Server or standalone mode\n* Embedded Server or hybrid mode\n\n* [1] http://db.apache.org/derby/papers/DerbyTut/ns_intro.html#ns",
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ced58901_c08bde12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T12:04:42Z",
      "side": 1,
      "message": "Never mind, this comment should be added to another change: [1].\n\n* [1] https://gerrit-review.googlesource.com/71117",
      "parentUuid": "ced58901_a08eda23",
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aed8553b_ff95df2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T06:47:57Z",
      "side": 1,
      "message": "I understand the problem, but what I (or another Gerrit developer, who is going to implement database migration change, that renames a column with constraint applied) would like to know, is a solution/workaround to this problem.",
      "range": {
        "startLine": 11,
        "startChar": 37,
        "endLine": 13,
        "endChar": 46
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aed8553b_df981b67",
        "filename": "src/main/java/com/google/gwtorm/schema/QueryModel.java",
        "patchSetId": 4
      },
      "lineNbr": 346,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T06:47:57Z",
      "side": 1,
      "message": "My be remove this line to make the tests pass again?\n\n  Failed tests:  \n  testLimitWithPlaceholder(com.google.gwtorm.schema.QueryModelTest)\n  : expected:\u003c...ROM people T LIMIT ?[]\u003e but was:\u003c...ROM people T LIMIT ?[ ]\u003e\n  testLimitWithConstant(com.google.gwtorm.schema.QueryModelTest)\n  : expected:\u003c...ROM people T LIMIT 5[]\u003e but was:\u003c...ROM people T LIMIT 5[ ]\u003e\n  Tests run: 344, Failures: 2, Errors: 0, Skipped: 54",
      "range": {
        "startLine": 346,
        "startChar": 12,
        "endLine": 346,
        "endChar": 32
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aed8553b_3f874705",
        "filename": "src/main/java/com/google/gwtorm/schema/sql/DialectDerby.java",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T08:26:56Z",
      "side": 1,
      "message": "According to the spec, yes. Remove this comment then?",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 24
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ced58901_209baa68",
        "filename": "src/main/java/com/google/gwtorm/schema/sql/DialectDerby.java",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T06:47:57Z",
      "side": 1,
      "message": "Have you considered to make this change in the base class, for all dialects?",
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ced58901_003b06fd",
        "filename": "src/main/java/com/google/gwtorm/schema/sql/DialectDerby.java",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T06:47:57Z",
      "side": 1,
      "message": "It would be better to say, that Gerrit core makes assumptions, that sequences are starting from 1.",
      "range": {
        "startLine": 136,
        "startChar": 5,
        "endLine": 138,
        "endChar": 17
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ced58901_e03d42f2",
        "filename": "src/main/java/com/google/gwtorm/schema/sql/DialectDerby.java",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T06:47:57Z",
      "side": 1,
      "message": "Nit: Unneeded blank line.",
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ced58901_60a5b2a5",
        "filename": "src/main/java/com/google/gwtorm/schema/sql/SqlDialect.java",
        "patchSetId": 4
      },
      "lineNbr": 468,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T08:26:56Z",
      "side": 1,
      "message": "Optional: Add Javadoc for the public method in base dialect class.",
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aed8553b_5f7c0bb1",
        "filename": "src/main/java/com/google/gwtorm/schema/sql/SqlDialect.java",
        "patchSetId": 4
      },
      "lineNbr": 468,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T08:26:56Z",
      "side": 1,
      "message": "Optional: Call it just limit? It will be always a number, represented as a string.",
      "range": {
        "startLine": 468,
        "startChar": 35,
        "endLine": 468,
        "endChar": 44
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38ce6fa4_34e070fb",
        "filename": "src/main/java/com/google/gwtorm/schema/sql/SqlDialect.java",
        "patchSetId": 4
      },
      "lineNbr": 468,
      "author": {
        "id": 1020527
      },
      "writtenOn": "2015-09-29T16:56:53Z",
      "side": 1,
      "message": "I think this limit can also be \"?\" as far I as saw in the debugger.",
      "parentUuid": "aed8553b_5f7c0bb1",
      "range": {
        "startLine": 468,
        "startChar": 35,
        "endLine": 468,
        "endChar": 44
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ced58901_c0403e71",
        "filename": "src/test/java/com/google/gwtorm/schema/sql/DialectDerbyTest.java",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-28T06:47:57Z",
      "side": 1,
      "message": "Left over from old rename: change it to new_age or age2, or, ...",
      "range": {
        "startLine": 183,
        "startChar": 11,
        "endLine": 183,
        "endChar": 23
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18f7ebe2_4311068e",
        "filename": "src/test/java/com/google/gwtorm/schema/sql/DialectDerbyTest.java",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1020527
      },
      "writtenOn": "2015-09-29T17:01:01Z",
      "side": 1,
      "message": "As far as I understand this is not how the renameField() method works! You can only rename fields that exists in a schema, like the member isRegistered for \"p2\" (-\u003e table people2). So here you actually can only rename \"isRegistered\" to something else and not as the principle of least suprise would make you assume rename a to b.",
      "parentUuid": "ced58901_c0403e71",
      "range": {
        "startLine": 183,
        "startChar": 11,
        "endLine": 183,
        "endChar": 23
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55a68ed6_fda9c7ae",
        "filename": "src/test/java/com/google/gwtorm/schema/sql/DialectDerbyTest.java",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-09-30T07:09:50Z",
      "side": 1,
      "message": "So, instead of just saying that Derby doesn\u0027t support renaming of columns with constraints applied, and pointing to the Derby  SQL reference, and adding a hacks, renaming age to isRegistered, just implement the algorithms you described in another commit message here. The advantages are; no hacks and the developer that is going t implement suach a migration would just check this code here and know how to do it. Something like that:\n\n  final PhoneBookDb2 p2 \u003d phoneBook2.open();\n    Statement s \u003d db.createStatement();\n    try {\n      ResultSet rs \u003d s.executeQuery(\n          \"select constraintname, checkdefinition from sys.sysconstraints c, sys.systables t, sys.syschecks ch \"\n          + \"WHERE c.tableid \u003d t.tableid and t.tablename \u003d \u0027PEOPLE\u0027 and c.constraintid \u003d ch.constraintid\");\n\n      String constraintName \u003d null;\n      while (rs.next()) {\n        if (rs.getString(2).contains(\"registered\")) {\n          constraintName \u003d rs.getString(1);\n        }\n      }\n      if (Strings.isNullOrEmpty(constraintName)) {\n        fail(\"Constraint not found\");\n      }\n      execute(\"alter table PEOPLE drop constraint \" + constraintName);\n      ((JdbcSchema) p2).renameField(executor, \"people\", \"registered\",\n          \"isRegistered\");\n    } catch (OrmException e) {\n      fail(e.getMessage());\n      e.printStackTrace();\n    } finally {\n      p2.close();\n    }",
      "parentUuid": "18f7ebe2_4311068e",
      "range": {
        "startLine": 183,
        "startChar": 11,
        "endLine": 183,
        "endChar": 23
      },
      "revId": "e8f26e8c37c5a6c366fd0f49f8d78f6eb53153a4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}